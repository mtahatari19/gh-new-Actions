name: CI/CD
on: push

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/mtahatari19/gh-new-actions

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm test

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: type=raw,value=${{ github.sha }}
      - run: |
          docker buildx build \
            --platform linux/arm/v7 \
            -t ${{ steps.meta.outputs.tags }} \
            --push \
            .
  deploy:
    needs: build_and_push
    runs-on: [self-hosted, Linux, ARM, raspberrypi]
    env:
      TAG: ${{ github.sha }}
    steps:
      - run: |
          cd /home/pi/app
          sed -i "s|ghcr.io/mtahatari19/gh-new-actions:.*|ghcr.io/mtahatari19/gh-new-actions:${TAG}|g" docker-compose.yml || true
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} || true
          docker compose pull
          docker compose up -d
          docker image prune -f
